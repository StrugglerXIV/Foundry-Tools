{"version":3,"file":"main.js","sources":["../../src/effects/autoEffects.js","../../src/main.js"],"sourcesContent":["export async function applyEffectsToSelectedTokens() {\r\n  console.log(\"Applying creature effects...\");\r\n  // Your macro logic goes here\r\n\r\n  // Ensure at least one token is selected\r\nif (!canvas.tokens.controlled.length) {\r\n    ui.notifications.warn(\"Please select at least one token.\");\r\n    console.log(\"No tokens selected.\");\r\n    return;\r\n}\r\n\r\n// Iterate through each selected token\r\nfor (const token of canvas.tokens.controlled) {\r\n    const actor = token.actor;\r\n    const isTokenActor = actor.isToken; // Check if this actor is token-specific\r\n    const sourceActor = isTokenActor ? game.actors.get(actor.id) : actor;\r\n\r\n    // Get creature's Challenge Rating (CR) as a flat number\r\n    const creatureCR = actor.system.details.cr ?? 0; // Default to 0 if CR is missing\r\n    const halfCR = Math.ceil(creatureCR / 2) ?? 0;\r\n\r\n    // Check current resistances and immunities\r\n    const currentResistances = actor.system.traits.dr.value || [];\r\n    const currentImmunities = actor.system.traits.di.value || [];\r\n    const prevResistances = [...currentResistances]; // Copy to prevent mutation\r\n    const prevImmunities = [...currentImmunities];\r\n\r\n    // Define the new effects array\r\n    const newEffects = [];\r\n\r\n    // Check if an effect named \"Proficiency Boost\" already exists\r\n    const profBoostValidator = \"Proficiency Boost\";\r\n    const hasProficiencyBoost = actor.effects.find(e => e.label === profBoostValidator);\r\n\r\n    // Check if an effect named \"Custom Resistances\" already exists\r\n    const resBoostValidator = \"Custom Resistances\";\r\n    const hasRes = actor.effects.find(e => e.label === resBoostValidator);\r\n\r\n    // Check if an effect named \"Custom Immunities\" already exists\r\n    const imunityValidator = \"Custom Immunities\";\r\n    const hasImu = actor.effects.find(e => e.label === imunityValidator);\r\n\r\n    // Check if an effect named \"Jack of All Trades\" already exists\r\n    const joatValidator = \"Jack of All Trades\";\r\n    const hasJoat = actor.effects.find(e => e.label === joatValidator);\r\n\r\n    // **Apply Proficiency Bonus Increase (CR)**\r\n    if (actor.system.attributes.prof && creatureCR > 0 && !hasProficiencyBoost) {\r\n        console.log(`Increasing Proficiency for ${sourceActor.name} by ${creatureCR}...`);\r\n        newEffects.push({\r\n            label: \"Proficiency Boost\",\r\n            icon: \"icons/svg/up.svg\",\r\n            changes: [{\r\n                    key: \"system.attributes.prof\",\r\n                    mode: CONST.ACTIVE_EFFECT_MODES.ADD,\r\n                    value: halfCR, // Flat number\r\n                    priority: 20,\r\n                },\r\n            ],\r\n            origin: `Actor.${sourceActor.id}`,\r\n            disabled: false,\r\n            duration: {\r\n                rounds: 0\r\n            },\r\n        });\r\n    }\r\n\r\n    // **Apply Resistance Effects**\r\n    if (prevResistances.length > 0 && !hasRes) {\r\n        console.log(`Adding Resistance Effects for ${sourceActor.name}...`);\r\n        const resistanceChanges = prevResistances.map(type => {\r\n            console.log(`Mapping Resistance: ${type}`);\r\n            return {\r\n                key: `system.traits.dm.amount.${type}`,\r\n                mode: CONST.ACTIVE_EFFECT_MODES.ADD,\r\n                value: `- @prof`,\r\n                priority: 20,\r\n            };\r\n        });\r\n\r\n        newEffects.push({\r\n            label: \"Custom Resistances\",\r\n            icon: \"icons/svg/shield.svg\",\r\n            changes: resistanceChanges,\r\n            origin: `Actor.${sourceActor.id}`,\r\n            disabled: false,\r\n            duration: {\r\n                rounds: 0\r\n            },\r\n        });\r\n    } else {\r\n        console.log(`No Resistances to Add for ${sourceActor.name}.`);\r\n    }\r\n\r\n    // **Apply Immunity Effects**\r\n    if (prevImmunities.length > 0 && !hasImu) {\r\n        console.log(`Adding Immunity Effects for ${sourceActor.name}...`);\r\n        const immunityChanges = prevImmunities.map(type => {\r\n            console.log(`Mapping Immunity: ${type}`);\r\n\r\n            // Calculate the values based on the actor's details\r\n            const crValue = sourceActor.system.details.cr || 0; // Fallback to 0 if undefined\r\n            const profValue = sourceActor.system.prof || 0; // Fallback to 0 if undefined\r\n\r\n            return {\r\n                key: `system.traits.dm.amount.${type}`,\r\n                mode: CONST.ACTIVE_EFFECT_MODES.ADD,\r\n                value: `- (@prof*2)`, // Use the calculated values\r\n                priority: 20,\r\n            };\r\n        });\r\n\r\n        // Add the new immunity effects to the newEffects array\r\n        newEffects.push({\r\n            label: \"Custom Immunities\",\r\n            icon: \"icons/svg/shield.svg\",\r\n            changes: immunityChanges,\r\n            origin: `Actor.${sourceActor.id}`,\r\n            disabled: false,\r\n            duration: {\r\n                rounds: 0\r\n            }, // Duration of 0 rounds means indefinite\r\n        });\r\n    } else {\r\n        console.log(`No Immunities to Add for ${sourceActor.name}.`);\r\n    }\r\n\r\n    // **Apply Jack of All Trades to all skills**\r\n    if (!hasJoat) {\r\n        console.log(`Adding Jack of All Trades to ${sourceActor.name}...`);\r\n        const skillKeys = [\r\n            'acr', 'ani', 'arc', 'ath', 'dec', 'his', 'ins', 'itm', 'inv', 'med',\r\n            'nat', 'prc', 'prf', 'per', 'rel', 'slt', 'ste', 'sur'\r\n        ];\r\n\r\n        const joatChanges = skillKeys.map(skill => {\r\n            return {\r\n                key: `system.skills.${skill}.bonuses.check`,\r\n                mode: CONST.ACTIVE_EFFECT_MODES.ADD,\r\n                value: `floor(@prof/2)`,\r\n                priority: 20\r\n            };\r\n        });\r\n\r\n        newEffects.push({\r\n            label: \"Jack of All Trades\",\r\n            icon: \"icons/svg/dice-target.svg\",\r\n            changes: joatChanges,\r\n            origin: `Actor.${sourceActor.id}`,\r\n            disabled: false,\r\n            duration: {\r\n                rounds: 0\r\n            }\r\n        });\r\n    }\r\n\t\r\n  // Check if an effect named \"Size-Based Damage Bonus\" already exists\r\n  const sizeDamageValidator = \"Size-Based Damage Bonus\";\r\n  const hasSizeDamage = actor.effects.find(e => e.label === sizeDamageValidator);\r\n\r\n  // **Apply Size-Based Damage Bonus**\r\n  if (!hasSizeDamage) {\r\n    console.log(`Adding Size-Based Damage Bonus to ${sourceActor.name}...`);\r\n    \r\n    // Get actor's size and extract hit die type from HP formula\r\n    const actorSize = actor.system.traits.size;\r\n    const hpFormula = actor.system.attributes.hp.formula || \"1d8\"; // Default to 1d8 if missing\r\n    \r\n    // Extract the die type (e.g., \"12d8\" -> \"d8\")\r\n    const dieType = hpFormula.match(/d\\d+/)?.[0] || \"d8\";\r\n    \r\n    // Calculate number of dice based on size (Medium = 1, Large = 2, Huge = 3, etc.)\r\n    const sizeMultiplier = {\r\n      \"tiny\": 0.5,\r\n      \"sm\": 1,\r\n      \"med\": 1,\r\n      \"lg\": 2,\r\n      \"huge\": 3,\r\n      \"grg\": 4\r\n    }[actorSize] || 1;\r\n    \r\n    // Round up for Tiny creatures (0.5 becomes 1)\r\n    const numberOfDice = Math.max(1, Math.floor(sizeMultiplier));\r\n    \r\n    // Format the bonus damage (e.g., \"1d8\", \"2d10\", etc.)\r\n    const bonusDamage = `${numberOfDice}${dieType}`;\r\n    \r\n    newEffects.push({\r\n      label: \"Size-Based Damage Bonus\",\r\n      icon: \"icons/svg/dice-target.svg\",\r\n      changes: [\r\n        {\r\n          key: \"system.bonuses.All-Damage\",\r\n          mode: CONST.ACTIVE_EFFECT_MODES.ADD,\r\n          value: `${bonusDamage}`,\r\n          priority: 20\r\n        }\r\n      ],\r\n      origin: `Actor.${sourceActor.id}`,\r\n      disabled: false,\r\n      duration: { rounds: 0 }\r\n    });\r\n  }\r\n\r\n    // Clear Resistances and Immunities for the token's actor\r\n    await actor.update({\r\n        \"system.traits.dr.value\": [],\r\n        \"system.traits.di.value\": [],\r\n    });\r\n\r\n    // Apply all effects\r\n    for (const effect of newEffects) {\r\n        await sourceActor.createEmbeddedDocuments(\"ActiveEffect\", [effect]);\r\n    }\r\n\r\n    console.log(`Updated resistances, immunities, proficiency, and damage for ${sourceActor.name}.`);\r\n}\r\n\r\n// Notify the user\r\nui.notifications.info(\"Resistances, immunities, proficiency, and damage updated for all selected tokens.\");\r\n}","Hooks.once(\"ready\", () => {\n  console.log(\"Creature Auto Effects | Rollup build succeeded.\");\n});\n\n// buttons \n\nimport { applyEffectsToSelectedTokens } from './effects/autoEffects.js';\n\nHooks.once(\"ready\", () => {\n  console.log(\"Creature Auto Effects | Ready\");\n\n  game.creatureAutoEffects = {\n    applyEffectsToSelectedTokens\n  };\n});\n\nHooks.on(\"getSceneControlButtons\", (controls) => {\n  const tokenControls = controls.find(c => c.name === \"token\");\n  if (!tokenControls) return;\n\n  tokenControls.tools.push({\n    name: \"apply-creature-effects\",\n    title: \"Apply Creature Effects\",\n    icon: \"fas fa-magic\", // You can change this\n    visible: game.user.isGM,\n    onClick: () => game.creatureAutoEffects.applyEffectsToSelectedTokens(),\n    button: true\n  });\n});\n"],"names":[],"mappings":"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"}